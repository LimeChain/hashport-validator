name: Deploy three validators network

#on:
#  repository_dispatch:
#    types: [trigger-image-release]
on: push

env:
  docker-compose: docker run --rm \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v "$PWD:$PWD" \
    -w="$PWD" \
    docker/compose:1.24.0

jobs:
  deploy_app_alice:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: "Set environmental variables"
        shell: bash
        run: |
          echo "refresh_containers_command=${{secrets.docker-compose}} stop && ${{secrets.docker-compose}} rm -f && ${{secrets.docker-compose}} pull && ${{secrets.docker-compose}} up -d">> $GITHUB_ENV

      - name: Setup GCloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_CE_KEY }}

      - name: Export application config
        shell: bash
        run: |
          echo "${{ secrets.APP_ALICE_CONFIG }}" > ./application.yml

      - name: Copy files
        run: gcloud compute scp --zone=${{ secrets.APP_ALICE_ZONE }} ./docker-compose.yml ./application.yml ${{ secrets.APP_ALICE_INSTANCE }}:~

      - name: Add alias
        run: gcloud compute ssh ${{ secrets.APP_ALICE_INSTANCE }} --zone=${{ secrets.APP_ALICE_ZONE }} --command="${{ env.add_docker-compose_alias }}"

      - name: Refresh images and containers
        run: gcloud compute ssh ${{ secrets.APP_ALICE_INSTANCE }} --zone=${{ secrets.APP_ALICE_ZONE }} --command="$refresh_containers_command"

  deploy_app_bob:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup GCloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_CE_KEY }}

      - name: Export application config
        shell: bash
        run: |
          echo "${{ secrets.APP_BOB_CONFIG }}" > ./application.yml

      - name: Copy files
        run: gcloud compute scp --zone=${{ secrets.APP_BOB_ZONE }} ./docker-compose.yml ./application.yml ${{ secrets.APP_BOB_INSTANCE }}:~

      - name: Refresh images and containers
        run: gcloud compute ssh ${{ secrets.APP_BOB_INSTANCE }} --zone=${{ secrets.APP_BOB_ZONE }} --command="$env.refresh_containers_command"

  deploy_app_carol:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup GCloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_CE_KEY }}

      - name: Export application config
        shell: bash
        run: |
          echo "${{ secrets.APP_CAROL_CONFIG }}" > ./application.yml

      - name: Copy files
        run: gcloud compute scp --zone=${{ secrets.APP_CAROL_ZONE }} ./docker-compose.yml ./application.yml ${{ secrets.APP_CAROL_INSTANCE }}:~

      - name: Refresh images and containers
        run: gcloud compute ssh ${{ secrets.APP_CAROL_INSTANCE }} --zone=${{ secrets.APP_CAROL_ZONE }} --command="$env.refresh_containers_command"