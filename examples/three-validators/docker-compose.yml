version: "3.3"
services:
  alice_db:
    image: postgres:9.6-alpine
    restart: always
    stop_grace_period: 2m
    stop_signal: SIGTERM
    tty: true
    environment:
      POSTGRES_DB: hedera_validator
      POSTGRES_PASSWORD: validator_pass
      POSTGRES_USER: validator
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - ./alice/db:/var/lib/postgresql/data
    ports:
      - 6432:5432
  bob_db:
    image: postgres:9.6-alpine
    restart: always
    stop_grace_period: 2m
    stop_signal: SIGTERM
    tty: true
    environment:
      POSTGRES_DB: hedera_validator
      POSTGRES_PASSWORD: validator_pass
      POSTGRES_USER: validator
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - ./bob/db:/var/lib/postgresql/data
    ports:
      - 7432:5432
  carol_db:
    image: postgres:9.6-alpine
    restart: always
    stop_grace_period: 2m
    stop_signal: SIGTERM
    tty: true
    environment:
      POSTGRES_DB: hedera_validator
      POSTGRES_PASSWORD: validator_pass
      POSTGRES_USER: validator
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - ./carol/db:/var/lib/postgresql/data
    ports:
      - 8432:5432
  dave_db:
    image: postgres:9.6-alpine
    restart: always
    stop_grace_period: 2m
    stop_signal: SIGTERM
    tty: true
    environment:
      POSTGRES_DB: hedera_validator
      POSTGRES_PASSWORD: validator_pass
      POSTGRES_USER: validator
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - ./dave/db:/var/lib/postgresql/data
    ports:
      - 9432:5432
  alice:
    image: eth-hedera-validator
    build:
      context: ../..
      dockerfile: ./build/Dockerfile
    environment:
      VALIDATOR_DATABASE_HOST: alice_db
    volumes:
      - ./bridge.yml:/src/hedera-eth-bridge-validator/config/bridge.yml
      - ./alice/config/node.yml:/src/hedera-eth-bridge-validator/config/node.yml
    restart: always
    tty: true
    ports:
      - 6200:5200
    depends_on:
      - "alice_db"
  bob:
    image: eth-hedera-validator
    environment:
      VALIDATOR_DATABASE_HOST: bob_db
    volumes:
      - ./bridge.yml:/src/hedera-eth-bridge-validator/config/bridge.yml
      - ./bob/config/node.yml:/src/hedera-eth-bridge-validator/config/node.yml
    restart: always
    tty: true
    ports:
      - 7200:5200
    depends_on:
      - "bob_db"
  carol:
    image: eth-hedera-validator
    environment:
      VALIDATOR_DATABASE_HOST: carol_db
    volumes:
    - ./bridge.yml:/src/hedera-eth-bridge-validator/config/bridge.yml
    - ./carol/config/node.yml:/src/hedera-eth-bridge-validator/config/node.yml
    restart: always
    tty: true
    ports:
      - 8200:5200
    depends_on:
      - "carol_db"
  dave_read_only:
    image: eth-hedera-validator
    environment:
      VALIDATOR_DATABASE_HOST: dave_db
    volumes:
      - ./bridge.yml:/src/hedera-eth-bridge-validator/config/bridge.yml
      - ./dave/config/node.yml:/src/hedera-eth-bridge-validator/config/node.yml
    restart: always
    tty: true
    ports:
      - 9200:5200
    depends_on:
      - "dave_db"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-lifecycle
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/monitoring/prometheus
    links:
      - alertmanager:alertmanager

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager/
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  prometheus_data: {}
  grafana_data: {}
